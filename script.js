function toggleMenu() {
    document.querySelector('.nav__list').classList.toggle('active');
    document.querySelector('.burger').classList.toggle('active');
    document.querySelector('.overlay').classList.toggle('active');
}

function closeMenu() {
    document.querySelector('.nav__list').classList.remove('active');
    document.querySelector('.burger').classList.remove('active');
    document.querySelector('.overlay').classList.remove('active');
}

document.addEventListener('DOMContentLoaded', function () {
    const cards = document.querySelectorAll('.question__card');

    cards.forEach(card => {
        const header = card.querySelector('.question__card-header');
        const answer = card.querySelector('.question__card-answer');
        const toggleButton = card.querySelector('.toggle-button');

        header.addEventListener('click', () => {
            const isOpen = card.classList.contains('open');

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –Ω–æ–≤–æ–π
            cards.forEach(otherCard => {
                if (otherCard !== card) {
                    otherCard.classList.remove('open');
                    const otherAnswer = otherCard.querySelector('.question__card-answer');
                    // otherAnswer.style.maxHeight = '0px';
                    otherAnswer.style.opacity = '0';
                    otherAnswer.style.padding = '0 15px';
                    otherCard.querySelector('.toggle-button').style.transform = 'rotate(0)';
                }
            });

            // –û—Ç–∫—Ä—ã–≤–∞–µ–º/–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            if (isOpen) {
                card.classList.remove('open');
                // answer.style.maxHeight = '0px';
                answer.style.opacity = '0';
                answer.style.padding = '0 15px';
                toggleButton.style.transform = 'rotate(0)';
            } else {
                card.classList.add('open');

                // –£–±–∏—Ä–∞–µ–º max-height = 0 –ø–µ—Ä–µ–¥ —Ä–∞—Å—á–µ—Ç–æ–º –≤—ã—Å–æ—Ç—ã
                // answer.style.maxHeight = 'none';
                answer.style.opacity = '1';
                answer.style.padding = '15px';

                // –î–∞–µ–º –≤—Ä–µ–º—è –±—Ä–∞—É–∑–µ—Ä—É –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∑–∞—Ç–µ–º –∑–∞–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
                requestAnimationFrame(() => {
                    // const height = answer.scrollHeight + 'px';
                    answer.style.maxHeight = height; // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–ª–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ
                });

                toggleButton.style.transform = 'rotate(45deg)';
            }
        });
    });
});

document.addEventListener('DOMContentLoaded', function () {
    const cards = document.querySelectorAll('.module__card');

    cards.forEach(card => {
        const header = card.querySelector('.module__card-header');
        const answer = card.querySelector('.module__card-answer');
        const toggleButton = card.querySelector('.toggle-button');

        header.addEventListener('click', () => {
            const isOpen = card.classList.contains('open');

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –Ω–æ–≤–æ–π
            cards.forEach(otherCard => {
                if (otherCard !== card) {
                    otherCard.classList.remove('open');
                    const otherAnswer = otherCard.querySelector('.module__card-answer');
                    // otherAnswer.style.maxHeight = '0px';
                    otherAnswer.style.opacity = '0';
                    otherAnswer.style.padding = '0 15px';
                    otherCard.querySelector('.toggle-button').style.transform = 'rotate(0)';
                }
            });

            // –û—Ç–∫—Ä—ã–≤–∞–µ–º/–∑–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ä—Ç–æ—á–∫—É
            if (isOpen) {
                card.classList.remove('open');
                // answer.style.maxHeight = '0px';
                answer.style.opacity = '0';
                answer.style.padding = '0 15px';
                toggleButton.style.transform = 'rotate(0)';
            } else {
                card.classList.add('open');

                // –£–±–∏—Ä–∞–µ–º max-height = 0 –ø–µ—Ä–µ–¥ —Ä–∞—Å—á–µ—Ç–æ–º –≤—ã—Å–æ—Ç—ã
                // answer.style.maxHeight = 'none';
                answer.style.opacity = '1';
                answer.style.padding = '15px';

                // –î–∞–µ–º –≤—Ä–µ–º—è –±—Ä–∞—É–∑–µ—Ä—É –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∑–∞—Ç–µ–º –∑–∞–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
                requestAnimationFrame(() => {
                    // const height = answer.scrollHeight + 'px';
                    answer.style.maxHeight = height; // –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–ª–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ
                });

                toggleButton.style.transform = 'rotate(45deg)';
            }
        });
    });
});


// –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–æ–¥–∞–ª–∫–∏

// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
const openModalButton = document.getElementById('openModalButton');
const modal = document.getElementById('modal');
const phoneInput = document.getElementById('phone');

// –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
openModalButton.addEventListener('click', function () {
    modal.classList.add('show');
});

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ
modal.addEventListener('click', function (event) {
    if (event.target === modal) {
        modal.classList.remove('show');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
document.getElementById('userForm').addEventListener('submit', function (event) {
    event.preventDefault();

    const name = document.getElementById('name').value.trim();
    const phone = document.getElementById('phone').value.trim();

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
    if (!name) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.');
        return;
    }

    if (!phone || phone === '+998 ') {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.');
        return;
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
    alert(`–†–∞—Ö–º–∞—Ç, ${name}! –¢–µ–∑ –æ—Ä–∞–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω “õ–∏–ª–∞–º–∏–∑ üòä`);

    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    this.reset();

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    modal.classList.remove('show');

    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    sendToTelegram(name, phone);
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ "+998" –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
phoneInput.addEventListener('input', function () {
    if (!this.value.startsWith('+998')) {
        this.value = '+998 ';
    }
    this.value = this.value.replace(/[^\+\d\s-]/g, ''); // –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
function sendToTelegram(name, phone) {
    const token = '7766333958:AAFeYXD-guOtwB6-4xeTU1UanMtu55qkkjw'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
    const chatId = '-4612448643'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π chat_id

    const message = `–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n–ò–º—è: ${name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`;
    const url = `https://api.telegram.org/bot${token}/sendMessage?chat_id=${chatId}&text=${encodeURIComponent(message)}`;

    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', url);

    fetch(url)
        .then(response => {
            console.log('HTTP —Å—Ç–∞—Ç—É—Å:', response.status);
            return response.json();
        })
        .then(data => {
            if (data.ok) {
                console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.');
            } else {
                console.error('–û—à–∏–±–∫–∞ API Telegram:', data);
                alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏–ª–∏ chat_id.');
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
            alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
        });
}


